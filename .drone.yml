---
kind: pipeline
name: testing

platform:
  os: linux
  arch: amd64

steps:
- name: vet
  pull: always
  image: golang:1.19
  commands:
  - go vet ./...
  environment:
    GO111MODULE: on

- name: test
  pull: always
  image: golang:1.19
  commands:
  - go test -cover ./...
  environment:
    GO111MODULE: on

trigger:
  branch:
  - master

---
kind: pipeline
name: linux-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: build-push
  pull: always
  image: golang:1.19
  commands:
  - "go build -v -ldflags \"-X main.build=${DRONE_BUILD_NUMBER}\" -a -o release/linux/amd64/drone-slack"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - push
    - pull_request

- name: build-tag
  pull: always
  image: golang:1.19
  commands:
  - "go build -v -ldflags \"-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}\" -a -o release/linux/amd64/drone-slack"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.19
  commands:
  - ./release/linux/amd64/drone-slack --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    dockerfile: docker/Dockerfile.linux.amd64
    dry_run: true
    password:
      from_secret: docker_password
    repo: plugins/slack
    tags: linux-amd64
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-amd64
  settings:
    auto_tag: true
    auto_tag_suffix: linux-amd64
    dockerfile: docker/Dockerfile.linux.amd64
    password:
      from_secret: docker_password
    repo: plugins/slack
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag

trigger:
  branch:
  - master

depends_on:
- testing

---
kind: pipeline
name: linux-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: build-push
  pull: always
  image: golang:1.19
  commands:
  - "go build -v -ldflags \"-X main.build=${DRONE_BUILD_NUMBER}\" -a -o release/linux/arm64/drone-slack"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - push
    - pull_request

- name: build-tag
  pull: always
  image: golang:1.19
  commands:
  - "go build -v -ldflags \"-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}\" -a -o release/linux/arm64/drone-slack"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.19
  commands:
  - ./release/linux/arm64/drone-slack --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-arm64
  settings:
    dockerfile: docker/Dockerfile.linux.arm64
    dry_run: true
    password:
      from_secret: docker_password
    repo: plugins/slack
    tags: linux-arm64
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-arm64
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm64
    dockerfile: docker/Dockerfile.linux.arm64
    password:
      from_secret: docker_password
    repo: plugins/slack
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag

trigger:
  branch:
  - master

depends_on:
- testing

---
kind: pipeline
name: linux-arm

platform:
  os: linux
  arch: arm

steps:
- name: build-push
  pull: always
  image: golang:1.19
  commands:
  - "go build -v -ldflags \"-X main.build=${DRONE_BUILD_NUMBER}\" -a -o release/linux/arm/drone-slack"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - push
    - pull_request

- name: build-tag
  pull: always
  image: golang:1.19
  commands:
  - "go build -v -ldflags \"-X main.version=${DRONE_TAG##v} -X main.build=${DRONE_BUILD_NUMBER}\" -a -o release/linux/arm/drone-slack"
  environment:
    CGO_ENABLED: 0
    GO111MODULE: on
  when:
    event:
    - tag

- name: executable
  pull: always
  image: golang:1.19
  commands:
  - ./release/linux/arm/drone-slack --help

- name: dryrun
  pull: always
  image: plugins/docker:linux-arm
  settings:
    dockerfile: docker/Dockerfile.linux.arm
    dry_run: true
    password:
      from_secret: docker_password
    repo: plugins/slack
    tags: linux-arm
    username:
      from_secret: docker_username
  when:
    event:
    - pull_request

- name: publish
  pull: always
  image: plugins/docker:linux-arm
  settings:
    auto_tag: true
    auto_tag_suffix: linux-arm
    dockerfile: docker/Dockerfile.linux.arm
    password:
      from_secret: docker_password
    repo: plugins/slack
    username:
      from_secret: docker_username
  when:
    event:
    - push
    - tag

trigger:
  branch:
  - master

depends_on:
- testing

---
kind: pipeline
type: ssh
name: windows-1809-amd64

platform:
  os: windows

server:
  host: windows.1809.amd64.plugins.drone.ci
  password:
    from_secret: windows_password
  user:
    from_secret: windows_username

steps:
- name: build
  commands:
  # TODO use the new DRONE_SEMVER_SHORT environment variables to
  # publish docker images for tag events.
  - go build -o release/windows/amd64/drone-slack.exe
  - docker login -u $env:USERNAME -p $env:PASSWORD
  - docker build -f docker/Dockerfile.windows.1809.amd64 -t plugins/slack:windows-1809-amd64 .
  - docker push plugins/slack:windows-1809-amd64
  environment:
    CGO_ENABLED: "0"
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password

trigger:
  event:
  - push

depends_on:
- testing

---
kind: pipeline
type: ssh
name: windows-1903-amd64

platform:
  os: windows

server:
  host: windows.1903.amd64.plugins.drone.ci
  password:
    from_secret: windows_password
  user:
    from_secret: windows_username

steps:
- name: build
  commands:
  # TODO use the new DRONE_SEMVER_SHORT environment variables to
  # publish docker images for tag events.
  - go build -o release/windows/amd64/drone-slack.exe
  - docker login -u $env:USERNAME -p $env:PASSWORD
  - docker build -f docker/Dockerfile.windows.1903.amd64 -t plugins/slack:windows-1903-amd64 .
  - docker push plugins/slack:windows-1903-amd64
  environment:
    CGO_ENABLED: "0"
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password

trigger:
  event:
  - push

depends_on:
- testing

---
kind: pipeline
name: notifications

platform:
  os: linux
  arch: amd64

steps:
- name: manifest
  pull: always
  image: plugins/manifest:1
  settings:
    ignore_missing: true
    password:
      from_secret: docker_password
    spec: docker/manifest.tmpl
    username:
      from_secret: docker_username

trigger:
  branch:
  - master
  event:
  - push
  - tag

depends_on:
- windows-1809-amd64
- windows-1903-amd64
- linux-amd64
- linux-arm64
- linux-arm

...
